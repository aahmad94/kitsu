{"version":3,"sources":["webpack:///./src/components/main_feed.jsx"],"names":["__webpack_require__","_anime","MainFeed","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","items","currentItemId","React","Component","term","_this2","fetchAnime","then","data","setState","_this3","item","filter","el","id","_react2","default","createElement","_search_bar2","onSearchTermChange","handleSearch","_current_item2","className","_list2","onItemSelect","handleItemSelect"],"mappings":"kWAAAA,EAAA,QACAA,EAAA,SACAA,EAAA,KACAC,EAAAD,EAAA,QACAA,EAAA,4DAEqBE,cACnB,SAAAA,iGAAcC,CAAAC,KAAAF,GAAA,IAAAG,mKAAAC,CAAAF,MAAAF,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,KAAAN,OAAA,OAEZC,EAAKM,OACHC,SACAC,cAAe,MAJLR,qUADsBS,UAAMC,mDAS7BC,GAAM,IAAAC,EAAAb,MACjB,EAAAH,EAAAiB,YAAWF,GAAMG,KAAM,SAAAC,GAAA,OAAQH,EAAKI,UAAWT,MAAOQ,EAAKA,SAC3DhB,KAAKO,MAAME,cAAgB,8CAGZA,GACfT,KAAKiB,UAAWR,mDAGT,IAAAS,EAAAlB,KACP,GAAIA,KAAKO,MAAME,cAAe,CAC5B,IAAMU,EAAOnB,KAAKO,MAAMC,MAAMY,OAAO,SAAAC,GAAA,OAAMA,EAAGC,IAAMJ,EAAKX,MAAME,gBAAe,GAC9E,OACEc,EAAAC,QAAAC,cAAA,WACEF,EAAAC,QAAAC,cAACC,EAAAF,SACCG,mBAAoB,SAACf,GAAD,OAAUM,EAAKU,aAAahB,MACpDW,EAAAC,QAAAC,cAAEI,EAAAL,SACAL,KAAMA,KAKV,OACEI,EAAAC,QAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,QAAAC,cAACC,EAAAF,SACGG,mBAAoB,SAACf,GAAD,OAAUM,EAAKU,aAAahB,MACpDW,EAAAC,QAAAC,cAACM,EAAAP,SACChB,MAAOR,KAAKO,MAAMC,MAClBwB,aAAc,SAACvB,GAAD,OAAmBS,EAAKe,iBAAiBxB,0BArC9CX","file":"0.f5c5fe2704350cb68232.hot-update.js","sourcesContent":["import React from 'react';\nimport SearchBar from './search_bar';\nimport List from './list';\nimport { fetchAnime } from '../actions/search/anime';\nimport CurrentItem from './current_item';\n\nexport default class MainFeed extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      currentItemId: null\n    };\n  }\n\n  handleSearch(term) {\n    fetchAnime(term).then( data => this.setState({ items: data.data }));\n    this.state.currentItemId = null;\n  }\n\n  handleItemSelect(currentItemId) {\n    this.setState({ currentItemId });\n  }\n\n  render() {\n    if (this.state.currentItemId) {\n      const item = this.state.items.filter(el => el.id == this.state.currentItemId)[0];\n      return (\n        <div>\n          <SearchBar\n            onSearchTermChange={(term) => this.handleSearch(term)} />\n        < CurrentItem \n          item={item}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"search-feed\">\n          <SearchBar \n              onSearchTermChange={(term) => this.handleSearch(term)} />\n          <List \n            items={this.state.items}\n            onItemSelect={(currentItemId) => this.handleItemSelect(currentItemId)}/>\n        </div>\n      );\n    }\n  }\n}"],"sourceRoot":""}